version: v1.0
name: Deploy Latest

agent:
  machine:
    type: e1-standard-2    # Linux machine type with 2 vCPUs, 4 GB of RAM
    os_image: ubuntu1804   # The Ubuntu 18.04 OS image.

blocks:

### 1) build and publish core image first
  - name: Core nodejs image
    task:
      env_vars:
      - name: NODE_VERSION
        value: "15.5.0"
      secrets:
      - name: docker-hub
      prologue:
        commands:
          - checkout
          - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      jobs:
      - name: nodejs
        commands:
          - ./build.sh -f node/Dockerfile -v $NODE_VERSION -p

### 2) build and publish images which has core as dependency
  - name: Core-dependent images
    task:
      env_vars:
      - name: NODE_VERSION
        value: "15.5.0"
      secrets:
      - name: docker-hub
      prologue:
        commands:
          - checkout
          - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      jobs:
        - name: onbuild
          commands:
            - ./build.sh -a onbuild -f node/Dockerfile.onbuild -v $NODE_VERSION -p
        - name: tester
          commands:
            - ./build.sh -a tester -f node/Dockerfile.tester -v $NODE_VERSION -p
        - name: tester-glibc
          commands:
            - ./build.sh -a tester-glibc -f node/Dockerfile.tester-glibc -v $NODE_VERSION -p
        - name: ssh
          commands:
            - ./build.sh -a ssh -f node-ssh/Dockerfile -v $NODE_VERSION -p
        - name: chrome
          commands:
            - ./build.sh -a chrome -f node-chrome/Dockerfile -v $NODE_VERSION -p
        - name: vips
          commands:
            - ./build.sh -a vips -f node-vips/Dockerfile -v $NODE_VERSION -p
        - name: rdkafka
          commands:
            - ./build.sh -a rdkafka -f node/Dockerfile.rdkafka -v $NODE_VERSION -p

### 2) build and publish images which has previous dependencies
  - name: Dependent images - 1
    task:
      env_vars:
      - name: NODE_VERSION
        value: "15.5.0"
      secrets:
      - name: docker-hub
      prologue:
        commands:
          - checkout
          - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      jobs:
        - name: ssh-onbuild
          commands:
            - ./build.sh -a ssh-onbuild -f node-ssh/Dockerfile.onbuild -v $NODE_VERSION -p
        - name: chrome-onbuild
          commands:
            - ./build.sh -a chrome-onbuild -f node-chrome/Dockerfile.onbuild -v $NODE_VERSION -p
        - name: chrome-tester
          commands:
            - ./build.sh -a chrome-tester -f node-chrome/Dockerfile.tester -v $NODE_VERSION -p
        - name: vips-onbuild
          commands:
            - ./build.sh -a vips-onbuild -f node-vips/Dockerfile.onbuild -v $NODE_VERSION -p
        - name: vips-tester
          commands:
            - ./build.sh -a vips-tester -f node-vips/Dockerfile.tester -v $NODE_VERSION -p
        - name: vips-tester-docker
          commands:
            - ./build.sh -a vips-tester-docker -f node-vips/Dockerfile.tester-docker -v $NODE_VERSION -p
        - name: vips-ssh
          commands:
            - ./build.sh -a vips-ssh -f node-vips-ssh/Dockerfile -v $NODE_VERSION -p
        - name: rdkafka-tester
          commands:
            - ./build.sh -a rdkafka-tester -f node/Dockerfile.tester-rdkafka -v $NODE_VERSION -p

### 3) build and publish images which has previous dependencies
  - name: Dependent images - 2
    task:
      env_vars:
      - name: NODE_VERSION
        value: "15.5.0"
      secrets:
      - name: docker-hub
      prologue:
        commands:
          - checkout
          - echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
      jobs:
        - name: vips-tester-glibc
          commands:
            - ./build.sh -a vips-tester-glibc -f node-vips/Dockerfile.tester-glibc -v $NODE_VERSION -p
        - name: vips-tester-chrome
          commands:
            - ./build.sh -a vips-tester-chrome -f node-vips/Dockerfile.tester-chrome -v $NODE_VERSION -p
        - name: vips-ssh-onbuild
          commands:
            - ./build.sh -a vips-ssh-onbuild -f node-vips-ssh/Dockerfile.onbuild -v $NODE_VERSION -p
